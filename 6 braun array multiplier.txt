module BAM(p,a,b);
output [7:0]p;
input [3:0]a;
input [3:0]b;
wire  [32:1]w;
and a1(p[0],a[0],b[0]);
and a2(w[1],a[1],b[0]);
and a3(w[2],a[2],b[0]);
and a4(w[3],a[3],b[0]);
and a5(w[4],a[0],b[1]);
and a6(w[5],a[1],b[1]);
and a7(w[6],a[2],b[1]);
and a8(w[7],a[3],b[1]);
and a9(w[8],a[0],b[2]);
and a10(w[9],a[1],b[2]);
and a11(w[10],a[2],b[2]);
and a12(w[11],a[3],b[2]);
and a13(w[12],a[0],b[3]);
and a14(w[13],a[1],b[3]);
and a15(w[14],a[2],b[3]);
and a16(w[15],a[3],b[3]);
fad f1(p[1],w[16],w[1],w[4],1'b0);
fad f2(w[32],w[17],w[5],w[2],1'b0);
fad f3(w[31],w[18],w[3],w[6],1'b0);
fad f4(p[2],w[19],w[8],w[32],w[16]);
fad f5(w[30],w[20],w[31],w[9],w[17]);
fad f6(w[29],w[21],w[7],w[10],w[18]);
fad f7(p[3],w[22],w[30],w[12],w[19]);
fad f8(w[26],w[23],w[29],w[13],w[20]);
fad f9(w[25],w[24],w[11],w[14],w[21]);
fad f10(p[4],w[27],w[26],1'b0,w[22]);
fad f11(p[5],w[28],w[25],w[27],w[23]);
fad f12(p[6],p[7],w[15],w[28],w[24]);
endmodule
module fad(output s,output cout,input a,input b,input cin);
wire z1,z2,z3;
xor(z1,a,b);
xor(s,z1,cin);
and(z2,z1,cin);
and(z3,a,b);
or(cout,z2,z3);
endmodule
